#include <boost/asio.hpp>
#include <iostream>
#include <nlohmann/json.hpp>

using boost::asio::ip::tcp;

int main() {
        std::vector<int64_t> feat_ids_tensor_values{
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471,
        113995, 46083, 86323, 25806, 45678, 81769, 3948, 100714, 67679, 86021, 15761, 107961, 111813, 29150, 26991, 47468, 110431, 91142, 105117, 39091, 64180, 83621, 52327, 38212, 8810, 85661, 81799, 65109, 102601, 55306, 52315, 51648, 95763, 66291, 11107, 74377, 45597, 109698, 115471
      };
      // feat_vals node
      std::vector<float> feat_values_tensor_values{
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
      };

        std::map<std::string, nlohmann::json> input_data;
        input_data["feat_ids"] = feat_ids_tensor_values;
        input_data["feat_vals"] = feat_values_tensor_values;
        std::cout << std::endl;
        // Serialize the map to a JSON string
        nlohmann::json j = input_data;
        std::string request = j.dump();
        std::cout << "raw request data: " << request << std::endl;

        // Deserialize the JSON string into a map
        nlohmann::json x = nlohmann::json::parse(request);
        std::map<std::string, nlohmann::json> intput_data = x.get<std::map<std::string, nlohmann::json>>();
        // Extract the vectors from the map
        std::vector<int64_t> feat_ids_tensor_values1 = intput_data["feat_ids"].get<std::vector<int64_t>>();
        std::cout << "Parsing feat ids: " << std::endl;
        for (std::vector<int64_t>::const_iterator i = feat_ids_tensor_values1.begin(); i != feat_ids_tensor_values1.end(); ++i) {
          std::cout << *i << ' ';
        }
        
        std::vector<float> feat_values_tensor_values1 = intput_data["feat_vals"].get<std::vector<float>>();
        std::cout << "Parsing feat vals: " << std::endl;
        for (std::vector<float>::const_iterator i = feat_values_tensor_values1.begin(); i != feat_values_tensor_values1.end(); ++i) {
          std::cout << *i << ' ';
        }
        std::cout << std::endl;

    return 0;
}